<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{35F4753B-2AD4-4EDA-AE48-36652C7CA8EA}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>XMPCoreStatic</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\libraries\windows_x64\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">XMPCoreStatic.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">XMPCoreStatic</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\libraries\windows_x64\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">XMPCoreStatic.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">XMPCoreStatic</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalOptions> /J /bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\public\include;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\third-party\expat\public\lib;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\resource\win;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ErrorReporting>Prompt</ErrorReporting>
      <ExceptionHandling>Sync</ExceptionHandling>
      <FloatingPointModel>Precise</FloatingPointModel>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <StringPooling>true</StringPooling>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN_ENV=1;_CRT_SECURE_NO_WARNINGS=1;_SCL_SECURE_NO_WARNINGS=1;WIN64;_WIN64=1;NOMINMAX;UNICODE;_UNICODE;DEBUG;_ITERATOR_DEBUG_LEVEL=2;XML_STATIC=1;HAVE_EXPAT_CONFIG_H=1;XMP_StaticBuild=1;BUILDING_XMPCOMMON_LIB=1;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN_ENV=1;_CRT_SECURE_NO_WARNINGS=1;_SCL_SECURE_NO_WARNINGS=1;WIN64;_WIN64=1;NOMINMAX;UNICODE;_UNICODE;DEBUG;_ITERATOR_DEBUG_LEVEL=2;XML_STATIC=1;HAVE_EXPAT_CONFIG_H=1;XMP_StaticBuild=1;BUILDING_XMPCOMMON_LIB=1;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\public\include;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\third-party\expat\public\lib;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\resource\win;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\public\include;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\third-party\expat\public\lib;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\resource\win;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:x64 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalOptions> /J /bigobj /FD %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\public\include;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\third-party\expat\public\lib;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\resource\win;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ErrorReporting>Prompt</ErrorReporting>
      <ExceptionHandling>Sync</ExceptionHandling>
      <FavorSizeOrSpeed>Size</FavorSizeOrSpeed>
      <FloatingPointModel>Precise</FloatingPointModel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <OmitFramePointers>false</OmitFramePointers>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <StringPooling>true</StringPooling>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <PreprocessorDefinitions>WIN_ENV=1;_CRT_SECURE_NO_WARNINGS=1;_SCL_SECURE_NO_WARNINGS=1;WIN64;_WIN64=1;NOMINMAX;UNICODE;_UNICODE;NDEBUG;_ITERATOR_DEBUG_LEVEL=0;XML_STATIC=1;HAVE_EXPAT_CONFIG_H=1;XMP_StaticBuild=1;BUILDING_XMPCOMMON_LIB=1;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN_ENV=1;_CRT_SECURE_NO_WARNINGS=1;_SCL_SECURE_NO_WARNINGS=1;WIN64;_WIN64=1;NOMINMAX;UNICODE;_UNICODE;NDEBUG;_ITERATOR_DEBUG_LEVEL=0;XML_STATIC=1;HAVE_EXPAT_CONFIG_H=1;XMP_StaticBuild=1;BUILDING_XMPCOMMON_LIB=1;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\public\include;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\third-party\expat\public\lib;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\resource\win;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\public\include;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\..\third-party\expat\public\lib;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\..\resource\win;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:x64 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/XMPCore/build/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/build -BC:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/build/vc12/static/windows_x64 --check-stamp-file C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\vc12\static\windows_x64\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/XMPCore/build/CMakeLists.txt;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\CMakeLists.txt;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\XMP_Config.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\XMP_ConfigCommon.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\ProductConfig.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\shared\SharedConfig.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\shared\SharedConfig_Common.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\shared\SharedConfig_Win.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\CMakeListsCommon.txt;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\vc12\static\windows_x64\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/XMPCore/build/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/build -BC:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/build/vc12/static/windows_x64 --check-stamp-file C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\vc12\static\windows_x64\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/XMPCore/build/CMakeLists.txt;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\CMakeLists.txt;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\XMP_Config.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\XMP_ConfigCommon.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\ProductConfig.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\shared\SharedConfig.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\shared\SharedConfig_Common.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\shared\SharedConfig_Win.cmake;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\CMakeListsCommon.txt;C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\build\vc12\static\windows_x64\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\client-glue\WXMPIterator.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\client-glue\WXMPMeta.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\client-glue\WXMPUtils.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\client-glue\WXMP_Common.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\TXMPIterator.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\TXMPMeta.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\TXMPUtils.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\XMP.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\XMP_Const.h" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\XMP_Environment.h" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\XMP_Version.h" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\source\ExpatAdapter.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\source\UnicodeConversions.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\source\XMLParserAdapter.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\build\XMP_BuildInfo.h" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPCore_Impl.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPIterator.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPMeta.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPUtils.hpp" />
    <ClInclude Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\resource\win\expat_config.h" />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\WXMPIterator.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\WXMPMeta.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\WXMPUtils.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPIterator.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPMeta-GetSet.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPMeta-Parse.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPMeta-Serialize.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPMeta.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPUtils-FileInfo.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPUtils.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\third-party\zuid\interfaces\MD5.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\third-party\expat\lib\xmlparse.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\third-party\expat\lib\xmlrole.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\third-party\expat\lib\xmltok.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\ExpatAdapter.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\ParseRDF.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\source\XMPCore_Impl.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\source\UnicodeConversions.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\source\XML_Node.cpp"  />
    <ClCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\source\XMP_LibUtils.cpp"  />
    <ResourceCompile Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\XMPCore\resource\win\XMPCore.rc"  />
    <None Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\client-glue\TXMPIterator.incl_cpp" />
    <None Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\client-glue\TXMPMeta.incl_cpp" />
    <None Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\client-glue\TXMPUtils.incl_cpp" />
    <None Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\public\include\XMP.incl_cpp" />
    <None Include="C:\yannick\VR\OpenCine\GIT\3rdParty\xmp_sdk\source\UnicodeInlines.incl_cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:/yannick/VR/OpenCine/GIT/3rdParty/xmp_sdk/build/vc12/static/windows_x64/ZERO_CHECK.vcxproj">
      <Project>8CA096ED-6E82-4AAB-AFE9-70E043EB05B2</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>